// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require jquery-ui
//= require js/jsPlumb-2.1.5-min.js

//= require react
//= require react_ujs
//= require components

//= require_tree .


$(document).ready(function () {
  $(".clicker").on("click", function (event) {
    console.log('start');
    var showMe = $(this).parent().find(".editor");
    $(this).parent().toggleClass('active');
    $(showMe).toggleClass('active');
  });
});

$(document).ready(function (e) {
  $('#search').keyup(function (e) {
    var original = $(this).val();
    var src_str = new RegExp($.map($(this).val().trim().split(' '), function(v) {
            return '(?=.*?' + v + ')';
        }).join(''), 'i');
    var grove = $('.clicker').parents(".tree");

    if (original.length >= 1) {
      $('.clicker').parent(".leaf").css( "border", "1px solid #1C2528").filter(function() {
          return src_str.exec($(this).text());
      }).css( "border", "3px solid red");

      $(grove).hide().filter(function() {
          return src_str.exec($(this).text());
      }).show();

    } else {
      $('.clicker').parent(".leaf").css( "border", "1px solid #1C2528");
      $(grove).show();
    }
  });
});

// 
// jsPlumb.bind("ready", function() {
//     var common = {
//     anchors:[ "BottomCenter", "TopCenter" ],
//     endpoints:["Blank", "Blank" ],
//     detachable:false,
//     maxConnections:-1,
//     connector:"Flowchart"};
//
//     var con = jsPlumb.connect({source:"srch", target:"srch2"}, common);
//     var list=[];
//     for(var i=0;i<con.length;i++)
//     {
//          list[i]=new Array(2);
//          list[i][0]=con[i].SourceId;
//          list[i][1]=con[i].TargetId;
//     }
//
//     jsPlumb.connect({source:list[1][0], target:list[1][1]}, common);
//     // jsPlumb.connect({ source:"srch", target:"srch2" }, common);
//
//
// });
